/******************************************************************************
 *
 *  Copyright 2018 NXP
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 ******************************************************************************/

package vendor.nxp.nxpwiredse@1.0;

interface INxpWiredSeHalCallback {

    /**
     * Open the Secure Element. This may include updating the applet
     * and/or vendor-specific initialization.
     *
     * @return Returns the response to Secure Element session to access through
     * WIRED SE
     *
     */
    openWiredSe() generates (int32_t seHandle);

    /**
     * Transmits an APDU command (as per ISO/IEC 7816) to the SE.
     *
     * The underlying layers generate as many APDUs as necessary to transport
     * this APDU to the Secure Element.
     *
     * @param data APDU command to be sent
     * @return response to the command. In case of error in communicating with
     *                  the secure element, an empty vector is returned.
     */
    transmit(vec<uint8_t> data, int32_t seHandle) generates (vec<uint8_t> response);

    /**
     * Returns Answer to Reset as per ISO/IEC 7816
     *
     * @return response containing the Answer to Reset. Empty vector if
     *                  Secure Element doesn't support ATR.
     */
    getAtr(int32_t seHandle) generates (vec<uint8_t> response);

    /**
     * Closes the SecureElement session
     *
     * @param handle SecureElement session handle
     */
    closeWiredSe(int32_t seHandle) generates (int32_t response);
};
